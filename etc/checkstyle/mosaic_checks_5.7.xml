<?xml version="1.0"?>
<!-- This is a checkstyle 5 config file -->

<!DOCTYPE module PUBLIC
		"-//Puppy Crawl//DTD Check Configuration 1.3//EN"
		"http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<module name="Checker">
	<metadata name="de.mosaic" value="Mosaic checkstyle"/>

	<module name="SuppressionCommentFilter"/>

	<property name="severity" value="warning"/>

	<module name="SeverityMatchFilter">
		<property name="severity" value="info"/>
		<property name="acceptOnMatch" value="false"/>
	</module>

	<module name="FileLength">
		<property name="max" value="2000"/>
	</module>

	<module name="FileTabCharacter">
		<property name="severity" value="error"/>
	</module>

	<!-- Obey the Dry pattern -->
	<module name="StrictDuplicateCode">
		<property name="min" value="20"/>
		<property name="severity" value="warning"/>
	</module>

	<module name="TreeWalker">
		<property name="tabWidth" value="2"/>

		<module name="FileContentsHolder"/>

		<!-- Catch statements need to have at least a comment. -->
		<module name="EmptyBlock">
			<property name="option" value="text"/>
			<property name="tokens" value="LITERAL_CATCH"/>
			<property name="severity" value="error"/>
		</module>

		<!-- All tokens except for LITERAL_CATCH need to have at least a statement. -->
		<module name="EmptyBlock">
			<property name="tokens"
			          value="LITERAL_DO,LITERAL_ELSE,LITERAL_FINALLY,LITERAL_IF,LITERAL_FOR,LITERAL_TRY,LITERAL_WHILE,INSTANCE_INIT,STATIC_INIT"/>
			<property name="severity" value="error"/>
		</module>

		<!-- Empty statements (a standalone semicolon) are forbidden. -->
		<module name="EmptyStatement">
			<property name="severity" value="error"/>
		</module>

		<!-- Checks padding in an empty for iterator. -->
		<module name="EmptyForIteratorPad"/>

		<!-- Checks padding for parentheses. -->
		<module name="ParenPad"/>

		<!-- Checks padding for typecast parentheses. -->
		<module name="TypecastParenPad"/>

		<!-- Checks whitespace. -->
		<module name="WhitespaceAround">
			<property name="severity" value="error"/>
			<property name="tokens"
			          value="ASSIGN, BAND, BAND_ASSIGN, BOR, BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, DIV, DIV_ASSIGN, EQUAL, GE, GT, LAND, LCURLY, LE, LITERAL_ASSERT, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS_ASSIGN, RCURLY, SL, SLIST, SL_ASSIGN, SR, SR_ASSIGN, STAR, STAR_ASSIGN, TYPE_EXTENSION_AND"/>
		</module>

		<!-- checks regarding imports -->
		<module name="IllegalImport">
			<property name="severity" value="error"/>
		</module>

		<module name="AvoidStarImport">
			<property name="severity" value="error"/>
		</module>

		<module name="UnusedImports">
			<property name="severity" value="error"/>
		</module>

		<module name="RedundantImport">
			<property name="severity" value="error"/>
		</module>

		<!-- checks regarding bracing -->
		<module name="NeedBraces">
			<property name="severity" value="error"/>
		</module>

		<module name="LeftCurly"/>

		<module name="RightCurly">
			<property name="option" value="same"/>
		</module>

		<!-- checks regarding naming -->
		<module name="LocalFinalVariableName">
			<property name="severity" value="error"/>
		</module>

		<module name="LocalVariableName">
			<property name="severity" value="error"/>
		</module>

		<module name="MemberName">
			<property name="severity" value="error"/>
		</module>

		<module name="PackageName">
			<property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
			<property name="severity" value="error"/>
		</module>

		<module name="MethodName">
			<property name="severity" value="error"/>
		</module>

		<module name="ParameterName">
			<property name="format" value="^[a-z]+[a-zA-Z0-9]*$"/>
			<property name="severity" value="error"/>
		</module>

		<module name="StaticVariableName">
			<property name="severity" value="error"/>
		</module>

		<module name="ConstantName">
			<property name="severity" value="error"/>
		</module>

		<module name="TypeName">
			<property name="severity" value="error"/>
		</module>

		<!-- checks regarind the length of anything -->
		<module name="LineLength">
			<property name="severity" value="warning"/>
			<property name="ignorePattern" value="^ *\*"/>
			<property name="max" value="160"/>
		</module>

		<module name="LineLength">
			<property name="ignorePattern" value="^ *\*"/>
			<property name="max" value="180"/>
			<property name="severity" value="error"/>
		</module>

		<module name="MethodLength">
			<!--<property name="id" value="methodlength"/>-->
			<property name="countEmpty" value="false"/>
			<property name="max" value="100"/>
		</module>

		<module name="MethodParamPad"/>

		<module name="ModifierOrder">
			<property name="severity" value="error"/>
		</module>

		<module name="ParameterNumber">
			<property name="max" value="9"/>
		</module>

		<module name="HiddenField">
			<property name="severity" value="error"/>
		</module>

		<!-- best practices -->
		<module name="FinalClass"/>

		<module name="MissingSwitchDefault"/>

		<module name="EqualsHashCode">
			<property name="severity" value="error"/>
		</module>

		<module name="CovariantEquals"/>

		<!-- Long constants should be declared with an upper case L to avoid confusion between lower case l and number 1. -->
		<module name="UpperEll">
			<property name="severity" value="error"/>
		</module>

		<module name="IllegalInstantiation">
			<property name="severity" value="error"/>
			<property name="classes" value="java.lang.Boolean"/>
		</module>

		<module name="IllegalThrows"/>

		<module name="InnerAssignment"/>
		<!--<module name="VisibilityModifier"/>-->
		<module name="VisibilityModifier">
			<property name="packageAllowed" value="true"/>
			<property name="protectedAllowed" value="true"/>
			<property name="severity" value="error"/>
		</module>

		<module name="ModifiedControlVariable">
			<property name="severity" value="error"/>
		</module>

		<!-- Strings have to be compared using equals. -->
		<module name="StringLiteralEquality">
			<property name="severity" value="error"/>
		</module>

		<module name="SuperFinalize">
			<property name="severity" value="error"/>
		</module>

		<!-- Method parameters shouldn't be assigned to, this is very poor programming practice. -->
		<module name="ParameterAssignment">
			<property name="severity" value="warning"/>
		</module>

		<module name="NestedIfDepth">
			<property name="max" value="4"/>
		</module>

		<module name="NestedTryDepth">
			<property name="max" value="3"/>
		</module>

		<module name="Regexp">
			<property name="illegalPattern" value="true"/>
			<property name="format" value="System\.out\."/>
			<property name="message" value="Illegal use of System.out. - use a logger instead!"/>
			<property name="severity" value="error"/>
		</module>

		<module name="Regexp">
			<property name="illegalPattern" value="true"/>
			<property name="format" value="System\.err\."/>
			<property name="message" value="Illegal use of System.err. - use a logger instead!"/>
			<property name="severity" value="error"/>
		</module>

		<module name="Regexp">
			<property name="illegalPattern" value="true"/>
			<property name="format" value="\.printStackTrace\(\)"/>
			<property name="message" value="Illegal use of [exception].printStackTrace() - use a logger instead!"/>
			<property name="severity" value="error"/>
		</module>

		<!-- Restrict long anonymous inner classes, they should be refactored to named inner classes. -->
		<module name="AnonInnerLength">
			<property name="max" value="60"/>
		</module>

		<!-- Make trailing comma after array declarations mandatory.-->
		<module name="ArrayTrailingComma"/>

		<!-- Arrays should only be defined in Java style, not C style. -->
		<module name="ArrayTypeStyle"/>

		<!-- Avoid unnecessary blocks except for switch/case statements. -->
		<module name="AvoidNestedBlocks">
			<property name="allowInSwitchCase" value="true"/>
		</module>

		<!-- Restrict expression complexity of boolean expressions. -->
		<module name="BooleanExpressionComplexity">
			<property name="max" value="5"/>
		</module>

		<!-- Make sure that the default clause is the last one in a switch block. -->
		<module name="DefaultComesLast"/>

		<!-- There's no need for main methods, these are mostly debugging leftovers. -->
		<module name="UncommentedMain"/>

		<!-- Don't allow definition of serialVersionUIDs - risk is too high that they are not maintained properly. -->
		<module name="RegexpSinglelineJava">
			<property name="format" value="^.*serialVersionUID.*$"/>
			<property name="message"
			          value="Illegal use of hard-coded serialVersionUID. Let the Java compiler create one automatically."/>
			<property name="ignoreComments" value="true"/>
			<property name="severity" value="error"/>
		</module>
	</module>
</module>